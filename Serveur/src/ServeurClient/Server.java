/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ServeurClient;


import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;



/**
 *
 * @author root
 */
public class Server extends javax.swing.JFrame {

    private static ServerSocket ssocket;
    private static Socket sock;
    private  static DataInputStream ent;
    private  static DataOutputStream sor;
    private static boolean running = false;
    private static Thread t;
     
    
    

     
    public void runserve(int port){
        
           
      try {
              
                       ssocket = new ServerSocket(port);
                       JOptionPane.showMessageDialog(this,"Serveur en attente de connexion");
                       //System.out.println("Serveur lancé");
                       sock = ssocket.accept();
                       JOptionPane.showMessageDialog(this,"Un client est connecté");
                       //System.out.println("Client connecté");
                       
                       String msgent = "";
                       String msgentdd = "";
                       
                       sor = new DataOutputStream(sock.getOutputStream());
                       ent = new DataInputStream((sock.getInputStream()));
                       
                       while(!msgent.equals("quitter")){
                           msgent = ent.readUTF();
                           msgentdd = ent.readUTF();
                           AffS.setText(AffS.getText()+msgent+" : "+msgentdd+"\n");
                           
                       }
                      
            
        } catch (Exception e) {
                 //JOptionPane.showMessageDialog(this, "Erreur : Client deconnecté ou Serveur Eteint");

        }
                       
                       
        
    }
    /**
     * Creates new form Server
     */
    public Server() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        msgtxt = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msg = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        porser = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        AffS = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        pseserve = new javax.swing.JTextField();
        ready = new javax.swing.JToggleButton();
        But = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        msgtxt.setBackground(new java.awt.Color(76, 76, 76));
        msgtxt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Serveur", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 24), new java.awt.Color(254, 254, 254))); // NOI18N

        jScrollPane1.setViewportView(msg);

        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setText("Port :");

        jScrollPane2.setViewportView(AffS);

        jLabel2.setForeground(new java.awt.Color(254, 254, 254));
        jLabel2.setText("Pseudo :");

        ready.setText("Demarrer le Serveur");
        ready.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readyActionPerformed(evt);
            }
        });

        But.setText("Envoyer");
        But.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout msgtxtLayout = new javax.swing.GroupLayout(msgtxt);
        msgtxt.setLayout(msgtxtLayout);
        msgtxtLayout.setHorizontalGroup(
            msgtxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgtxtLayout.createSequentialGroup()
                .addGroup(msgtxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(msgtxtLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(msgtxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(msgtxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(msgtxtLayout.createSequentialGroup()
                                    .addGroup(msgtxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(msgtxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(porser, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                        .addComponent(pseserve)))
                                .addComponent(ready, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(msgtxtLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(But, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        msgtxtLayout.setVerticalGroup(
            msgtxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgtxtLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(msgtxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pseserve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(msgtxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(porser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ready)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(But)
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(msgtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(msgtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButActionPerformed
        // TODO add your handling code here:
        try {
            
            
            
            String p = pseserve.getText();
            String msgout = msg.getText();
            
            sor.writeUTF(p);
            sor.writeUTF(msgout);
            msg.setText("");
            
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_ButActionPerformed

    private void readyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readyActionPerformed
            
        int port = Integer.parseInt(porser.getText());
        try {
            runserve(port);
        } catch (Exception e) {
        }
            
            

    }//GEN-LAST:event_readyActionPerformed
    
   
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Server().setVisible(true);
            }
        });
             
        
        
                    
           
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextPane AffS;
    private javax.swing.JButton But;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private static javax.swing.JTextPane msg;
    private javax.swing.JPanel msgtxt;
    private static javax.swing.JTextField porser;
    public static javax.swing.JTextField pseserve;
    private javax.swing.JToggleButton ready;
    // End of variables declaration//GEN-END:variables
}
